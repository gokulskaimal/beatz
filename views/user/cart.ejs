<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        orange: {
                            500: "#f97316",
                            600: "#ea580c",
                        },
                        darker: '#121212',
                    },
                },
            },
        };
    </script>
</head>

<body class="bg-gray-900 text-white font-sans min-h-screen flex flex-col">
    <!-- Header -->
    <%- include('../partials/header',{ user}) %>
    <!-- Main Content -->
    <main class="flex-grow container mx-auto px-4 py-8">
        <h1 class="text-3xl text-yellow-500 font-bold mb-6">Your Cart</h1>

        <div id="cartContent">
            <% if (cart.length === 0) { %>
                <p class="text-gray-400">Your cart is empty.</p>
            <% } else { %>
                <div class="flex flex-col md:flex-row gap-8">
                    <!-- Cart Items -->
                    <div class="bg-darker rounded-lg shadow-xl overflow-hidden flex-grow">
                        <div class="p-6">
                            <% cart.forEach(item => { %>
                                <div class="flex items-center justify-between border-b border-gray-700 py-4">
                                    <div class="flex items-center space-x-4">
                                        <img src="<%= item.product.image[0] %>" alt="<%= item.product.product_name %>" class="w-20 h-20 object-cover rounded-md">
                                        <div>
                                            <h3 class="font-semibold"><%= item.product.product_name %></h3>
                                            <p class="text-white-700 font-bold">
                                                <span>Price: </span><span class="text-red-500 font-bold">₹</span><%= item.product.price %>
                                            </p>
                                            <!-- Stock Status -->
                                            <p class="<%= item.product.stock > 0 ? 'text-green-500' : 'text-red-500' %>">
                                                <%= item.product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="flex items-center space-x-4">
                                        <div class="flex items-center space-x-2">
                                            <button
                                                onclick="updateQuantity('<%= item.product._id %>', <%= item.quantity - 1 %>)"
                                                class="bg-gray-700 p-1 rounded-full hover:bg-gray-600 transition-colors"
                                                <%= item.quantity <= 1 ? 'disabled' : '' %>>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                    <line x1="5" y1="12" x2="19" y2="12"></line>
                                                </svg>
                                            </button>
                                            <span><%= item.quantity %></span>
                                            <button
                                                onclick="updateQuantity('<%= item.product._id %>', <%= item.quantity + 1 %>)"
                                                class="bg-gray-700 p-1 rounded-full hover:bg-gray-600 transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                    <line x1="12" y1="5" x2="12" y2="19"></line>
                                                    <line x1="5" y1="12" x2="19" y2="12"></line>
                                                </svg>
                                            </button>
                                        </div>
                                        <p class="font-bold"><span class="text-red-600 font-bold">₹</span><%= item.total %></p>
                                        <button onclick="removeItem('<%= item.product._id %>')" class="text-red-500 hover:text-red-400 transition-colors">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                <polyline points="3 6 5 6 21 6"></polyline>
                                                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                                <line x1="10" y1="11" x2="10" y2="17"></line>
                                                <line x1="14" y1="11" x2="14" y2="17"></line>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Checkout Section -->
                    <div class="bg-darker rounded-lg shadow-xl p-6 md:w-1/3">
                        <h2 class="text-xl font-bold mb-4"><span class="text-yellow-500">Order Summary</span></h2>
                        <div class="flex justify-between items-center mb-2">
                            <span>Item Subtotal:</span>
                            <span class="font-semibold"><span class="text-red-600 font-bold">₹</span><%= subTotal %></span>
                        </div>
                        <div class="flex justify-between items-center mb-2">
                            <span>Total Discount:</span>
                            <span class="font-semibold text-green-500">- <span class="text-red-600 font-bold">₹</span><%= totalDiscount %></span>
                        </div>
                        <div class="flex justify-between items-center mb-2">
                            <span>Shipping:</span>
                            <span class="text-green-500">Free</span>
                        </div>
                        <div class="border-t border-gray-700 my-4"></div>
                        <div class="flex justify-between items-center text-xl font-bold">
                            <span class="text-green-700 font-bold">Total:</span>
                            <span class="text-white-700 font-bold"><span class="text-red-600 font-bold">₹</span><%= grandTotal %></span>
                        </div>
                        <button onclick="proceedToCheckout()"
                            class="mt-4 w-full bg-yellow-600 text-black px-6 py-3 rounded-lg hover:bg-yellow-400 transition-colors font-bold">
                            Proceed to Checkout
                        </button>
                    </div>
                </div>
            <% } %>
        </div>
    </main>

    <!-- Footer -->
    <%- include('../partials/footer') %>

    <script>
        function showMessage(icon, title, text) {
            Swal.fire({
                icon: icon,
                title: title,
                text: text,
            });
        }

        async function fetchCart() {
            try {
                const response = await fetch('/user/cart', {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                const data = await response.json();
                if (data.cart.length === 0) {
                    // If the cart is empty, reload the page
                    return window.location.reload();
                } else {
                    renderCart(data);
                }
            } catch (err) {
               if(cart.length>0){
                showMessage('error', 'Error', 'An error occurred while fetching your cart.');
               }
            }
        }

        function renderCart(data) {
            const cartContent = document.getElementById('cartContent');
            if (data.cart.length === 0) {
                cartContent.innerHTML = '<p class="text-gray-400">Your cart is empty.</p>';
            } else {
                let html = `
                <div class="flex flex-col md:flex-row gap-8">
                    <div class="bg-darker rounded-lg shadow-xl overflow-hidden flex-grow">
                        <div class="p-6">
                `;

                data.cart.forEach(item => {
                    html += `
                    <div class="flex items-center justify-between border-b border-gray-700 py-4">
                        <div class="flex items-center space-x-4">
                            <img src="${item.product.image[0]}" alt="${item.product.product_name}" class="w-20 h-20 object-cover rounded-md">
                            <div>
                                <h3 class="font-semibold">${item.product.product_name}</h3>
                                <p class="text-white-700 font-bold"> <span>Price: </span><span class="text-red-500 font-bold">₹</span>${item.product.price}</p>
                                <p class="${item.product.stock > 0 ? 'text-green-500' : 'text-red-500'}">
                                    ${item.product.stock > 0 ? 'In Stock' : 'Out of Stock'}
                                </p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center space-x-2">
                                <button
                                    onclick="updateQuantity('${item.product._id}', ${item.quantity - 1})"
                                    class="bg-gray-700 p-1 rounded-full hover:bg-gray-600 transition-colors"
                                    ${item.quantity <= 1 ? 'disabled' : ''}>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <line x1="5" y1="12" x2="19" y2="12"></line>
                                    </svg>
                                </button>
                                <span>${item.quantity}</span>
                                <button
                                    onclick="updateQuantity('${item.product._id}', ${item.quantity + 1})"
                                    class="bg-gray-700 p-1 rounded-full hover:bg-gray-600 transition-colors">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <line x1="12" y1="5" x2="12" y2="19"></line>
                                        <line x1="5" y1="12" x2="19" y2="12"></line>
                                    </svg>
                                </button>
                            </div>
                            <p class="font-bold"><span class="text-red-600 font-bold">₹</span>${item.total}</p>
                            <button onclick="removeItem('${item.product._id}')" class="text-red-500 hover:text-red-400 transition-colors">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <polyline points="3 6 5 6 21 6"></polyline>
                                    <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                                    <line x1="10" y1="11" x2="10" y2="17"></line>
                                    <line x1="14" y1="11" x2="14" y2="17"></line>
                                </svg>
                            </button>
                        </div>
                    </div>
                `;
                });

                html += `
                        </div>
                    </div>
                    <div class="bg-darker rounded-lg shadow-xl p-6 md:w-1/3">
                        <h2 class="text-xl font-bold mb-4">Order Summary</h2>
                        <div class="flex justify-between items-center mb-2">
                            <span>Item Subtotal:</span>
                            <span class="font-semibold"><span class="text-red-600 font-bold">₹</span>${data.subTotal}</span>
                        </div>
                        <div class="flex justify-between items-center mb-2">
                            <span>Discount:</span>
                            <span class="font-semibold text-green-500">- <span class="text-red-600 font-bold">₹</span>${data.totalDiscount}</span>
                        </div>
                        <div class="flex justify-between items-center mb-2">
                            <span>Shipping:</span>
                            <span class="text-green-500">Free</span>
                        </div>
                        <div class="border-t border-gray-700 my-4"></div>
                        <div class="flex justify-between items-center text-xl font-bold">
                            <span class="text-green-700 font-bold">Total:</span>
                            <span class="text-white-700 font-bold"><span class="text-red-600 font-bold">₹</span>${data.grandTotal}</span>
                        </div>
                        <button onclick="proceedToCheckout()"
                            class="mt-4 w-full bg-yellow-600 text-black px-6 py-3 rounded-lg hover:bg-yellow-400 transition-colors font-bold">
                            Proceed to Checkout
                        </button>
                    </div>
                `;

                cartContent.innerHTML = html;
            }
        }

        async function updateQuantity(productId, quantity) {
            try {
                const response = await fetch('/user/cart/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ productId, quantity })
                });

                const result = await response.json();
                if (response.ok) {
                    showMessage('success', 'Success', result.message);
                    fetchCart();
                } else {
                    showMessage('error', 'Error', result.message);
                }
            } catch (err) {
                showMessage('error', 'Error', 'An error occurred. Please try again later.');
            }
        }

        async function removeItem(productId) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch('/user/cart/remove', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ productId })
                    });

                    const result = await response.json();
                    if (response.ok) {
                        showMessage('success', 'Removed!', result.message);
                        if (result.isEmpty) {
                            // If the cart is empty, reload the page
                            window.location.reload();
                        } else {
                            fetchCart();
                        }
                    } else {
                        showMessage('error', 'Error', result.message);
                    }
                } catch (err) {
                    showMessage('error', 'Error', 'An error occurred. Please try again later.');
                }
            }
        }

        function proceedToCheckout() {
            window.location.href = '/user/checkout';
        }

        // Fetch and render cart on page load
        document.addEventListener('DOMContentLoaded', () => {
            const message = "<%= message %>";
            if (message) {
                showMessage('info', 'Cart Status', message);
            }
            fetchCart();
        });

        document.addEventListener('DOMContentLoaded', () => {
            const userIcon = document.getElementById('user-icon');
            const userDropdown = document.getElementById('user-dropdown');

            // Toggle the dropdown menu visibility on click
            userIcon.addEventListener('click', () => {
                userDropdown.classList.toggle('hidden');
            });

            // Hide the dropdown when clicking outside
            document.addEventListener('click', (e) => {
                if (!userIcon.contains(e.target) && !userDropdown.contains(e.target)) {
                    userDropdown.classList.add('hidden');
                }
            });
        });
    </script>
</body>

</html>

