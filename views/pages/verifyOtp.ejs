<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Verify OTP - Beatz</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
    body {
      font-family: 'Inter', sans-serif;
      background-color: #000;
    }
    .search-input {
      background-color: rgba(255, 255, 255, 0.1);
      border: none;
      color: white;
    }
    .search-input::placeholder {
      color: rgba(255, 255, 255, 0.5);
    }
  </style>
</head>
<body class="min-h-screen bg-black text-white">
  <!-- Header -->
  <!-- Include Header -->
  <%- include('../partials/header') %>

  <!-- Main Content -->
  <main class="flex items-center justify-center min-h-[calc(100vh-64px)]">
    <div class="w-full max-w-md mx-auto p-6">
      <div class="bg-gray-900 backdrop-blur-sm p-8 rounded-lg">
        <h1 class="text-center text-2xl font-bold text-[#f97316] mb-8">Enter your OTP</h1>
        <form id="otpForm" action="/auth/verify-otp" method="POST" class="space-y-6">
          <input type="text" id="otp" name="otp" required maxlength="6"
            class="w-full bg-zinc-800/50 border border-zinc-700 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f97316]"
            placeholder="Enter your OTP">
          <button type="submit"
            class="w-full py-3 bg-[#f97316] text-white font-medium rounded-lg hover:bg-[#ea580c] transition-colors">
            SUBMIT
          </button>
        </form>
        <div class="mt-6 text-center">
          <p class="text-sm text-zinc-400">
            Didn't get the OTP? 
            <button id="resend-btn" class="text-[#f97316] hover:text-[#ea580c] disabled:text-zinc-600" disabled>
              Resend
            </button>
          </p>
          <span id="countdown" class="text-sm text-red-500 mt-2 block"></span>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <%- include('../partials/footer') %>

  <script>
    let countdownTimer;
    const resendButton = document.getElementById('resend-btn');
    const countdownElement = document.getElementById('countdown');
    const otpForm = document.getElementById('otpForm');
  
    async function handleResendOtp() {
      try {
        resendButton.disabled = true;
        resendButton.textContent = "Resend";
  
        const response = await fetch('/auth/resend-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });
  
        const data = await response.json();
  
        if (response.ok && data.success) {
          await Swal.fire('Success', data.message, 'success');
          startCountdown(60); // Restart 1-minute countdown
        } else {
          await Swal.fire('Error', data.message || 'Failed to resend OTP', 'error');
          resendButton.disabled = false;
          resendButton.textContent = "Resend";
        }
      } catch (error) {
        console.error('Error:', error);
        await Swal.fire('Error', 'Failed to resend OTP. Please try again.', 'error');
        resendButton.disabled = false;
        resendButton.textContent = "Resend";
      }
    }
  
    function startCountdown(seconds) {
      clearInterval(countdownTimer);
      const endTime = Date.now() + seconds * 1000;
      localStorage.setItem('otpEndTime', endTime);
      updateCountdown();
  
      countdownTimer = setInterval(updateCountdown, 1000);
    }
  
    function updateCountdown() {
      const endTime = parseInt(localStorage.getItem('otpEndTime'));
      const now = Date.now();
      const remainingSeconds = Math.max(0, Math.ceil((endTime - now) / 1000));
  
      if (remainingSeconds > 0) {
        resendButton.disabled = true;
        countdownElement.textContent = `Resend available in ${remainingSeconds}s`;
      } else {
        clearInterval(countdownTimer);
        resendButton.disabled = false;
        countdownElement.textContent = '';
        localStorage.removeItem('otpEndTime');
      }
    }
  
    otpForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      const formData = new FormData(otpForm);

      try {
        const response = await fetch(otpForm.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(Object.fromEntries(formData)),
        });

        const data = await response.json();

        if (response.ok && data.success) {
          await Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: data.message,
            showConfirmButton: false,
            timer: 1500
          });
          window.location.href = data.redirectUrl;
        } else {
          await Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: data.message || 'An error occurred. Please try again.'
          });
        }
      } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'An error occurred. Please try again.'
        });
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      resendButton.addEventListener('click', handleResendOtp);
  
      const savedEndTime = localStorage.getItem('otpEndTime');
      if (savedEndTime) {
        const now = Date.now();
        if (savedEndTime > now) {
          const remainingSeconds = Math.ceil((savedEndTime - now) / 1000);
          startCountdown(remainingSeconds);
        } else {
          localStorage.removeItem('otpEndTime');
        }
      } else {
        startCountdown(60); // Start initial 1-minute countdown if no saved time
      }
    });
  </script>
</body>
</html>

